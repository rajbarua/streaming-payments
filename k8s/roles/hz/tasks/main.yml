---
- name: Add helm repo of Hazelcast
  kubernetes.core.helm_repository:
    name: hazelcast
    repo_url: "https://hazelcast-charts.s3.amazonaws.com/"
    force_update: true
  tags:
    - hz
    - hz-init
# tasks file for k8s/roles/hz
- name: Install Hazelcast Operator
  shell: helm install hzoperator hazelcast/hazelcast-platform-operator --version=5.10.0 --set=installCRDs=true
  register: command_result
  failed_when: command_result.rc >= 2
  tags:
    - hz
    - hz-init
- name: Wait for operator to be ready
  shell: "kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=hazelcast-platform-operator --timeout=300s -n default"
  tags:
    - hz
    - hz-init
######################
## License
######################
- name: Create license secret from file in home directory
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: hazelcast-license
        namespace: default
      type: Opaque
      data:
        license-key: "{{ lookup('file', '~/hazelcast/hazelcast.license') | b64encode }}"
  tags:
    - hz
######################
## SSL
## https://docs.ansible.com/ansible/latest/collections/community/crypto/docsite/guide_selfsigned.html
## https://docs.hazelcast.com/operator/latest/tls
######################
- name: Create private key
  community.crypto.openssl_privatekey:
    path: "{{ self_signed_cert_key_file }}"
    size: 2048
    format: pkcs8
  tags:
    - ssl
- name: Create certificate signing request (CSR) for self-signed certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ self_signed_cert_key_file }}"
    common_name: hazelcast.com
    organization_name: Hazelcast
    subject_alt_name:
      - DNS:hazelcast.com
      - DNS:hazelcast
      - DNS:hazelcast.default.svc.cluster.local
      - DNS:hz-primary
      - DNS:hz-primary.default.svc.cluster.local
      - DNS:hz-secondary
      - DNS:hz-secondary.default.svc.cluster.local
  register: csr
  tags:
    - ssl
- name: Create simple self-signed certificate
  community.crypto.x509_certificate:
    path: "{{ self_signed_cert_cert_file }}"
    privatekey_path: "{{ self_signed_cert_key_file }}"
    csr_content: "{{ csr.csr }}"
    provider: selfsigned
  tags:
    - ssl
- name: Kubernetes tls secret from the certificate
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: hazelcast-ssl
        namespace: default
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ lookup('file', self_signed_cert_cert_file) | b64encode }}"
        tls.key: "{{ lookup('file', self_signed_cert_key_file) | b64encode }}"
  tags:
      - ssl
- name: Using java_keystore module create a keystore
  community.general.java_keystore:
    name: hazelcast-ssl
    certificate: "{{ lookup('file', self_signed_cert_cert_file) }}"
    private_key: "{{ lookup('file', self_signed_cert_key_file) }}"
    password: hazelcast
    dest: "{{ self_signed_cert_keystore_file }}"
  tags:
    - ssl
- name: Create a ConfigMap from the keystore file
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: hazelcast-keystore
        namespace: default
      binaryData:
        hazelcast.jks: "{{ lookup('file', self_signed_cert_keystore_file) | b64encode }}"
  tags:
      - ssl
######################
## Clusters
######################

- name: Custom configuration for primary Hazelcast. Used for data-connection
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', './templates/primary-custom-config-cm.j2') }}"
  tags:
    - hz-primary
    - hz
    - hz-platform
- name: Install Hazelcast primary cluster
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: hazelcast.com/v1alpha1
      kind: Hazelcast
      metadata:
        namespace: default
        name: hz-primary
      spec:
        clusterSize: "{{ primary_cluster_size }}"
        repository: 'docker.io/hazelcast/hazelcast-enterprise'
        version: "{{ hazelcast_version }}"
        licenseKeySecret: hazelcast-license
        clusterName: hz-primary
        jet:
          resourceUploadEnabled: true
        properties:
          "hazelcast.slow.operation.detector.enabled": "true"
        userCodeDeployment:
          clientEnabled: true
          remoteURLs:
          - https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc8/23.3.0.23.09/ojdbc8-23.3.0.23.09.jar
          - https://repo1.maven.org/maven2/com/oracle/database/xml/xdb/23.3.0.23.09/xdb-23.3.0.23.09.jar
          - https://repo1.maven.org/maven2/io/debezium/debezium-connector-oracle/2.7.3.Final/debezium-connector-oracle-2.7.3.Final.jar
          - https://repo1.maven.org/maven2/io/debezium/debezium-ddl-parser/2.7.3.Final/debezium-ddl-parser-2.7.3.Final.jar
          - https://repo1.maven.org/maven2/jakarta/jms/jakarta.jms-api/3.1.0/jakarta.jms-api-3.1.0.jar
        exposeExternally:
          type: Smart
          discoveryServiceType: LoadBalancer
          memberAccess: LoadBalancer
        # resources:
        #   requests:
        #     memory: "8Gi"
        #     cpu: "7"
        #   limits:
        #     memory: "16Gi"
        #     cpu: "7"
  tags:
    - hz-primary
    - hz
    - hz-platform
- name: Wait for Hazelcast primary cluster to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    wait: yes
    namespace: default
    name: "hz-primary-{{ item }}"
    wait_sleep: 10
    wait_timeout: 360
  loop: "{{ range(0, primary_cluster_size)|list }}"
  tags:
    - hz-primary
    - hz
    - hz-platform

######################
## MC
######################
- name: Start management center
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: hazelcast.com/v1alpha1
      kind: ManagementCenter
      metadata:
        namespace: default
        name: hazelcast-mc
      spec:
        repository: 'docker.io/hazelcast/management-center'
        version: "{{ hazelcast_mc_version }}"
        licenseKeySecret: hazelcast-license
        externalConnectivity:
          type: LoadBalancer
        hazelcastClusters:
          - address: hz-primary
            name: hz-primary
        persistence:
          enabled: true
          size: 1Gi
  tags:
    - mc
    - hz
- name: Wait for management centre to be ready
  shell: "kubectl wait --for=condition=ready pod/hazelcast-mc-0 -n default --timeout=300s"
  tags:
    - mc
    - hz


######################
## Create Data Connection
######################
- name: Find out the External IP of hz-primary-0
  shell: "kubectl get service hz-primary-0 -n default -o jsonpath='{.status.loadBalancer.ingress[0].ip}'"
  register: hz_primary_ip
  until: hz_primary_ip.stdout != ""
  retries: 10
  delay: 10
  tags:
    - hz
- name: Add the external IP to CLC config
  # shell: "clc config add hz-primary cluster.address={{hz_primary_ip.stdout}}:5701 cluster.name=hz-primary ssl.enabled=true ssl.skip-verify=true"
  shell: "clc config add hz-primary cluster.address={{hz_primary_ip.stdout}}:5701 cluster.name=hz-primary"
  tags:
    - hz
- name: Creat data connections
  shell: clc -c hz-primary sql "CREATE DATA CONNECTION source_oracle_db TYPE JDBC SHARED OPTIONS ('jdbcUrl'='jdbc:oracle:thin:@//oracle-db23c-free-oracle-db23c-free:1521/FREEPDB1', 'user'='c##dbzuser', 'password'='dbz');"
  tags:
    - hz